## A list of things that had irritating friction involved.
##
## Take them off of here when they're done being configured.

Text mode:
1. Auto-fill mode should be default.
2. When using auto-fill-mode, should be more intelligent about bullet
   points and such. (Note: Org-mode does this right by default. Worth
   noting.)
3. Investigate possibility of just using org-mode for most text file
   things.

Haskell-mode:
1. Auto-indent for that seems to suck really hard. What's up with
   that? Fix it.

Writing modes:
1. Don't understand them. Rewrite one of the existing ones. Something
   simple to start with.


CPU Usage:
0. I accidentally ran a macro "until bell ring" that would never terminate.
   This caused the system to seize up; Emacs never relinquished control.
   There should be a way to prevent this from happening in the future

Paredit: Others things should be more like it.
0. Specifically, just like 'kill' and such works on the tree structure
   of Lisp, it'd be nice if other languages had similar behaviors.
   Should think about how to build that into a major mode (probably by
   writing a copy of a minor mode of some relatively simple language).
1. On the other hand, this is reminding me that expand-region is
   absurdly powerful. As is multiple-cursors. I should use those more.
   Think of how I want to use them and get them bound nicely.

Ace-Jump-Mode:
0. All sorts of badass. Needs a single-press binding. C-; isn't taken,
   but I actually like 'j;' using key-chord as well.

Macro undo:
0. Command 'undo' does not undo the entire application of a keyboard
   macro, and I think it should. Fix that, and then press that
   upstream, if somebody hasn't already done it.

Auto-complete:
0. Modify the popup window so that I can hit some key-sequence while
   the popup is active which produces, say, numerics next to the
   completions. Then you just type the number next to a completion,
   and it completes.
